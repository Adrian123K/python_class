height=c(9,15,20,6)
name=c("영업1","영업2","영업3","영업4")
barplot(height, names.arg = name, main="부서별 영업실적",
col=rainbow(length(height)), xlab="부서", ylab="영업실적(억원)")
pie(height, labels=name, main="부서별 영업실적")
install.packages("animation")
library(animation)
ani.options(interval=1)
for(i in 10:1){ #for문은 처음에서 실행
plot.new()
rect(0,0,1,1, col="yellow")
text(0.5,0.5, i, cex=5, col=rgb(0.2,0.2,0.2,0.7))
ani.pause()
}
install.packages("wordcloud")
install.packages("RColorBrewer")
library(wordcloud)
library(RColorBrewer)
pal1=brewer.pal(8,"Dark2")
x=c("코로나19","자가격리","회복","발병")
y=c(9, 4, 6, 8)
wordcloud(x,y,colors=pal1)
iter=5000
plot(0,0,xlab="동전던진 횟수",ylab="앞면 비율",xlim=c(0,iter),ylim=c(0,1))
abline(a=0.5,b=0, col="red")
sum=0
for(x in 1:iter){
y=sample(c("head","tail"),1,replace=T)
if(y=="head")
sum=sum+1
prob=sum/x
points(x,prob)
}
vec1=c(1,2,3,4,5);vec1;vec1[-3]
vec1[1:(length(vec1)-2)]
vec1[-(1:3)]
vec1[9]=9;vec1
append(vec1, 10, after=2); # after 뒤는 index값
vec1
vec2=append(vec1, 10, after=2);vec2
vec3=append(vec2,c(11,12),after=2);vec3
vec3=append(vec3,c(13,14),after=0);vec3
v1=c(1,2,3)
v2=c(4,5,6)
v1+v2
v1+1
v3=c('7','8','9')
union(v1,v3)
union(v1,as.numeric(v3))
v4=c(4,5,6,7,8,9)
v1+v4 # vector자리수가 다를 경우 순환하여 연산, 두 vector는 배수관계일때만 가능
v5=c(5,6,7,8)
v1+v5 # 배수관계가 아닐 경우 순환 연산 하다가 종료 + 경고
no=c(1,2,3,4)
name=c('Apple','Peach','Banana','Grape')
price=c(500,200,100,50)
qty=c(7,2,4,5)
sales=data.frame(NO=no, NAME=name, PRICE=price, QTY=qty)
sales
sales2 = matrix(c(1,'Apple',500,10,
2,'Peach',200,4,
3,'Banana',100,6,
4,'Grape',50,8), nrow=4,byrow=T)
sales2
df1=data.frame(sales2);df1
names(df1)=c('NO','NAME','PRICE','QTY');df1
sales
sales$NAME
sales[1,3]
sales[1,]
sales[,3]
sales[c(1,2),]
sales[,c(1,2)]
sales[,c(1:3)]
# 조건문 작성하여 추출
subset(sales,qty<5)
subset(sales,price==200)
subset(sales,name=='Apple')
sales2
df1
subset(df1,QTY<5) # factor로 되어있기때문에 숫자로 변환해야함
class(df1)
str(df1)
df1$QTY=as.numeric(df1$QTY)
df1
subset(df1, QTY<5) # 정상적으로 출력된 것 아님
df1$QTY=as.numeric(as.character(df1$QTY)) # numeric으로 바꾸기 전에 character로 먼저 변환 후 실행
df1
subset(df1, QTY<5)
str(sales2)
str(sales)
subset(df1, QTY<5) # 정상적으로 출력된 것 아님
installed.packages(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
subset(diamons, cut=='premium')
subset(diamonds, cut=='premium')
subset(diamonds, cut=='Premium')
str(diamonds)
df1$QTY=as.numeric(df1$QTY)
df1
str(df1)
dfr1
df1
sales2 = matrix(c(1,'Apple',500,10,
2,'Peach',200,4,
3,'Banana',100,6,
4,'Grape',50,8), nrow=4,byrow=T)
sales2
df1=data.frame(sales2);df1
sales2
df1
subset(df1,QTY<5) # factor로 되어있기때문에 숫자로 변환해야함
class(df1)
str(df1)
df1$QTY=as.numeric(df1$QTY)
sales$NAME
df1=data.frame(sales2);df1
names(df1)=c('NO','NAME','PRICE','QTY');df1
df1$QTY=as.numeric(df1$QTY)
df1
str(df1)
df1=data.frame(sales2);df1
df1$QTY=as.numeric(df1$QTY)
names(df1)=c('NO','NAME','PRICE','QTY');df1
df1$QTY=as.numeric(df1$QTY)
df1
df1=data.frame(sales2);df1
names(df1)=c('NO','NAME','PRICE','QTY');df1
df1$QTY=as.numeric(as.character(df1$QTY)) # numeric으로 바꾸기 전에 character로 먼저 변환 후 실행
df1
subset(df1, QTY<5)
str(sales2)
str(sales)
no<-c(1,2,3)
name<-c('apple','banana','peach')
price<-c(100,200,300)
df2=data.frame(NO=no,NAME=name,PRICE=price);df2
str(df2)
no<-c(10,20,30)
name<-c('train','car','plain')
price<-c(60000,40000,100000)
df3=data.frame(NO=no,NAME=name,PRICE=price);df3
df4=cbind(df2,df3);df4
df5=rbind(df2,df3);df5
dff=data.frame(NO=no,ireum=name,Gagyuk=price)
df6=rbind(df2,dff);df6 # column명이 다를 경우 진행안됨
df2=data.frame(name=c('apple','banana','cherry'),
price=c(499,599,299))
df3=data.frame(name=c('apple','banana','berry'),
qty=c(10,40,90))
df2;df3
df7=merge(df2,df3,all=T);df7 # 유실데이터가 발생하므로 all 옵션 사용
new=data.frame(name='mango',price=199) # 내용추가
df2=rbind(df2,new);df2
df2=rbind(df2,data.frame(name='strawberry',price=299));df2
# Ex: df2에 qty=c(10,20,30,40,50)의 값을 갖는 column 추가
df8=cbind(df2,qty=c(10,20,30,40,50));df8
no=c(1,2,3,4,5)
name=c("서","주","최","이","윤")
addr=c("서울","대전","대구","부산","광주")
tel=c(1111,2222,3333,4444,5555)
hobby=c("독서","미술","놀기","자기","먹기")
member=data.frame(NO=no,NAME=name,ADDR=addr,TEL=tel,HOBBY=hobby);member
# 쿼리문처럼 선택하여 불러오는 방법
mem2=subset(member, select=c(NO,NAME,HOBBY));mem2
mem3=subset(member, select=-TEL);mem3
colnames(mem3)=c("번호","이름","주소","취미");mem3
member
ncol(member)
nrow(member)
names(member) # column명
rownames(member)
colnames(member) # column명
row.names(member)
member[c(5,3,1,4,2),] # row순서 바꿔서 가져오기
v1 = seq(1,10,2);v1
NROW(v1)
v7 = c(1,3,5,7,9);v7
3 %in% v7
# Ex1
date4 = seq(as.Date("2015-01-01"),as.Date("2015-01-31"),1);date4
# Ex2
vec1 <- c('사과','배','감','버섯','고구마');vec1
vec1[-3]
# Ex3
vec1 <- c('봄','여름','가을','겨울')
vec2 <- c('봄','여름','늦여름','초가을')
union(vec1,vec2)
intersect(vec1,vec2)
setdiff(vec1,vec2)
# 대,소문자 변경
v3 = c('a','b','c','d','e','f');v3
v3[c(3,5)]=c('C','E');v3
v3[c(1,2)]=toupper(v3[c(1,2)]);v3
v3[c(2,5)]=tolower(v3[c(2,5)]);v3
# 백업 데이터 생활화!
v4=v3[-4];v4
# vector -> factor형 변환
v5=as.factor(v3);v5
v6=seq(as.Date("2020/01/01","%Y/%m/%d"),as.Date("2020/12/31","%Y/%m/%d"),1);v6;class(v6)
# v6에서 연도를 제외한 월/일 형태로 변환
v7=as.character(v6,"%m/%d");v7;class(v7)
# v6에서 2020년 2월 28일 뒤에 2월 29일 삽입
as.character(as.Date("2020-02-28"),'%j')
v6=seq(as.Date("2020/01/01","%Y/%m/%d"),as.Date("2020/12/31","%Y/%m/%d"),1)
v6
class(v6)
v8=append(as.character(v6),"2020-02-29", as.numeric(as.character(as.Date("2020-02-28"),'%j')))
v8
v6
# v6에서 2020년 2월 29일 뒤에 2월 30일 삽입
as.character(as.Date("2020-02-28"),'%j')
v8=append(as.character(v6),"2020-02-30", as.numeric(as.character(as.Date("2020-02-29"),'%j')))
# v6에서 2020년 2월 29일 뒤에 2월 30일 삽입
as.character(as.Date("2020-02-29"),'%j')
v8=append(as.character(v6),"2020-02-30", as.numeric(as.character(as.Date("2020-02-29"),'%j')))
v8
# 자료 추출
v6
names(v6)=1:length(v6)
v6[v6=="2020-02-28"]
names(v6[v6=="2020-02-28"])
setwd()
setwd("K:/Itwill/2. Python/자료")
library(dplyr)
library(googleVis)
library(devtools)
library(lubridate)
library(stringr)
library(ggplot2)
library(rJava) # 안되는 라이브는 삭제 후 다시
library(RColorBrewer)
library(wordcloud)
library(multilinguer)
install.packages("multilinguer")
install.packages("multilinguer")
library(multilinguer)
library(KoNLP)
useSejongDic() # 3:none
d1=readLines("ahn.txt")
d1
d1=readLines("ahn.txt")
d1
# 1. 데이터에서 단어만 추출
d2=sapply(d1, extractNoun, USE.NAMES=F)
d2
# 2. 단어 집합 생성
head(unlist(d2),30)
d3=unlist(d2)
d3
# 3. 단어 필터링
# 4. 단어 핸들링
# gsub("변경 전 글자", "변경 후 글자", "원본데이터")
d3=gsub("\\d+","",d3)
d3=gsub("들","",d3)
d3=gsub("저","나",d3)
d3=gsub("내","나",d3)
d3=gsub("나","자신",d3)
d3
d3=gsub("해","",d3)
d3=gsub("곳","",d3)
d3=gsub("한","",d3)
d3=gsub("것","",d3)
d3=gsub("돌","",d3)
d3=gsub("이","",d3)
d3=gsub("름","",d3)
# 5. txt파일로 저장하고 table로 불러오면서 공백제거
write(unlist(d3),"ahn2.txt")
d4=read.table("ahn2.txt")
d4
# 6. 단어 빈도수 저장
nrow(d4)
wc=table(d4)
wc
head(sort(wc,decreasing=T),20)
# 7. wordcloud 출력
pal=brewer.pal(9,"Set3")
wordcloud(names(wc), freq=wc, scale=c(5,1), rot.per=0.25, min.freq=1, random.order=F, random.color=T, colors=pal)
legend(0.3,1,"BTS UN 연설문", cex=0.8, fill=NA, border=NA, bg='white', text.col='red', text.font=2, box.col='red')
legend(0.3,1,"안철수 연설문", cex=0.8, fill=NA, border=NA, bg='white', text.col='red', text.font=2, box.col='red')
t1=read.csv("K://r_data/kaggle/nlp-getting-started/test.csv",stringsAsFactors = F)
View(t1)
c1=VCorpus(VectorSource(t1))
